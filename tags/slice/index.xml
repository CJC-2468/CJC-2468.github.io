<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>slice on </title>
    <link>https://example.com/tags/slice/</link>
    <description>Recent content in slice on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 21 Apr 2022 12:25:09 +0800</lastBuildDate><atom:link href="https://example.com/tags/slice/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go的Slice详解</title>
      <link>https://example.com/post/go%E7%9A%84slice%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 21 Apr 2022 12:25:09 +0800</pubDate>
      
      <guid>https://example.com/post/go%E7%9A%84slice%E8%AF%A6%E8%A7%A3/</guid>
      
        <description>go数组和切片区别？ 数组：长度固定，并且长度也是数组类型的一部分，一般声明的时候要指定大小，不指定也能根据初始化的时候自己算大小，值类型。
切片：底层有三个属性：指针，长度，容量，不需要指定长度容量，可以通过数组初始化也能用make初始化。因为基于数组实现，所以它的底层的内存是连续分配的，可以通过索引获得数据。多个切片底层可能公用同一个底层数组，所以对一个切片的操作可能影响多个slice。能够自动扩容。
golang中数组和切片在参数传递的时候区别是什么？ 数组是值传递，切片看上去像是引用传递，实际上还是值传递。
讲一下slice的扩容机制？ 根据runtime/slice.go源码，它的扩容情况如下：
newcap := old.cap	//old.</description>
      
    </item>
    
  </channel>
</rss>