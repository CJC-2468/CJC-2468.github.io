<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>操作系统 on </title>
    <link>https://example.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
    <description>Recent content in 操作系统 on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 07 May 2022 19:16:44 +0800</lastBuildDate><atom:link href="https://example.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>操作系统基本命令</title>
      <link>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sat, 07 May 2022 19:16:44 +0800</pubDate>
      
      <guid>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</guid>
      
        <description>Linux基本命令 linux文本三剑客 awk、grep、sed是linux操作文本的三大利器，合称文本三剑客，也是必须掌握的linux命令之一。三者的功能都是处理文本，但侧重点各不相同，其中属awk功能最强大，但也最复杂。grep更适合单纯的查找或匹配文本，sed更适合编辑匹配到的文本，awk更适合格式化文本，对文本进行较复杂格式处理。
grep:文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来（匹配到的标红）。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。
grep的工作方式是这样的，它在一个或多个文件中搜索字符串模板。如果模板包括空格，则必须被引用，模板后的所有字符串被看作文件名。搜索的结果被送到标准输出，不影响原文件内容。
grep可用于shell脚本，因为grep通过返回一个状态值来说明搜索的状态，如果模板搜索成功，则返回0，如果搜索不成功，则返回1，如果搜索的文件不存在，则返回2。我们利用这些返回值就可进行一些自动化的文本处理工作。
egrep = grep -E：扩展的正则表达式 （除了\&amp;lt; , \&amp;gt; , \b 使用其他正则都可以去掉\）</description>
      
    </item>
    
    <item>
      <title>操作系统设备管理</title>
      <link>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 07 May 2022 19:15:26 +0800</pubDate>
      
      <guid>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/</guid>
      
        <description>设备管理 设备控制器 操作系统如何管理多种设备？
设备控制器：为了屏蔽设备之间的差异，每个设备都有一个叫设备控制器 的组件，比如硬盘有硬盘控制器、显示器有视频控制器等。设备控制器里有芯片，它可执行自己的逻辑，也有自己的寄存器，用来与 CPU 进行通信。
输入输出设备分类？ 块设备和字符设备：
 块设备，把数据存储在固定大小的块中，每个块有自己的地址，硬盘、USB 是常见的块设备。 字符设备，以字符为单位发送或接收一个字符流，字符设备是不可寻址的，也没有任何寻道操作，鼠标是常见的字符设备。  IO控制方式   轮询：控制器的寄存器一般会有状态标记位，用来标识输入或输出操作是否完成。让 CPU 一直查寄存器的状态，直到状态标记为完成，很明显，这种方式非常的傻瓜，它会占用 CPU 的全部时间。</description>
      
    </item>
    
    <item>
      <title>操作系统网络系统</title>
      <link>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E7%BB%9C%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sat, 07 May 2022 19:13:48 +0800</pubDate>
      
      <guid>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E7%BB%9C%E7%B3%BB%E7%BB%9F/</guid>
      
        <description>网络系统 文件怎么发送？ 如果服务端要提供文件传输的功能，我们能想到的最简单的方式是：将磁盘上的文件读取出来，然后通过网络协议发送给客户端。
传统的文件传输：read+write操作。两次系统调用，四次上下文切换，四次拷贝，其中两次是 DMA 的拷贝，另外两次则是通过 CPU 拷贝的
所以，要想提高文件传输的性能，就需要减少「用户态与内核态的上下文切换」和「内存拷贝」的次数。
  要想减少上下文切换到次数，就要减少系统调用的次数。</description>
      
    </item>
    
    <item>
      <title>操作系统文件系统</title>
      <link>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sat, 07 May 2022 19:12:07 +0800</pubDate>
      
      <guid>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</guid>
      
        <description>文件系统 什么是文件系统？文件系统的基本组成？ 文件系统是操作系统中负责管理持久数据的子系统。说简单点，就是负责把用户的文件存到磁盘硬件中，因为即使计算机断电了，磁盘里的数据并不会丢失，所以可以持久化的保存文件。
文件系统的基本数据单位是文件，它的目的是对磁盘上的文件进行组织管理，那组织的方式不同，就会形成不同的文件系统。
Linux 最经典的一句话是：「一切皆文件」，不仅普通的文件和目录，就连块设备、管道、socket 等，也都是统一交给文件系统管理的。
文件系统的基本操作单位是数据块。
文件的数据结构？什么是inode？有什么用？ Linux 文件系统会为每个文件分配两个数据结构：索引节点（index node）和目录项（directory entry），它们主要用来记录文件的元信息和目录层次结构。</description>
      
    </item>
    
    <item>
      <title>操作系统调度算法</title>
      <link>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 07 May 2022 19:10:40 +0800</pubDate>
      
      <guid>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/</guid>
      
        <description>调度算法 操作系统的三大调度机制，分别是「进程调度/页面置换/磁盘调度算法」。6+5+5
进程/CPU调度算法有哪些？ 硬件时钟提供某个频率的周期性中断，那么可以根据如何处理时钟中断 ，把调度算法分为两类：
 非抢占式调度算法会让正在运行的进程运行直到被阻塞，或者直到该进程退出，才会调用另外一个进程，也就是说不会理时钟中断这个事情。 抢占式调度算法挑选一个进程，然后让该进程只运行某段时间，如果在该时段结束时，该进程仍然在运行时，则会把它挂起，接着调度程序从就绪队列挑选另外一个进程。这种抢占式调度处理，需要在时间间隔的末端发生时钟中断，以便把 CPU 控制返回给调度程序进行调度，也就是常说的时间片机制。  先来先服务，短作业优先，高响应比优先，时间片轮转，最高优先级，多级反馈队列。</description>
      
    </item>
    
    <item>
      <title>操作系统进程管理</title>
      <link>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 07 May 2022 19:08:46 +0800</pubDate>
      
      <guid>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</guid>
      
        <description>进程管理 进程，线程，协程分别是什么？区别是什么？ 进程：首先进程其实是运行起来的程序，是资源(包括内存、打开的文件等)分配的单位，每个进程都有自己的独立虚拟地址空间，拥有自己独立的堆和栈，上下文切换开销比较大。
线程：线程是 CPU 调度的单位，线程只会有运行时需要的必不可少的资源（程序计数器，寄存器，栈），它的栈是独立的，但是堆是共享的，线程可以享有这个进程内所有的共享资源。上下文切换开销比进程小。线程的作用：线程能减少并发执行的时间和空间开销。（注意：当进程中的一个线程崩溃时，会导致其所属进程的所有线程崩溃。这里是针对 C/C++ 语言，Java语言中的线程奔溃不会造成进程崩溃）。
协程：一种用户态的轻量级线程，这是对内核透明的，也就是系统并不知道有协程的存在，是完全由用户自己的程序进行调度的。协程和线程一样共享堆，不共享栈，发生上下文切换的时候，因为是用户态的，所以没有内核切换的开销，上下文切换的会比较快。
区别：</description>
      
    </item>
    
    <item>
      <title>操作系统内存管理</title>
      <link>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 07 May 2022 19:07:10 +0800</pubDate>
      
      <guid>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</guid>
      
        <description>内存管理 什么是逻辑地址和物理地址？ 我们编程一般只有可能和逻辑地址打交道，比如在 GO 语言中，指针里面存储的数值就可以理解成为内存里的一个地址，这个地址也就是我们说的逻辑地址，逻辑地址由操作系统决定。物理地址指的是真实物理内存中地址，更具体一点来说就是内存地址寄存器中的地址。物理地址是内存单元真正的地址。
进程地址空间有哪些划分？ 虚拟地址空间的内部又被分为 内核空间 和 用户空间 两部分。</description>
      
    </item>
    
    <item>
      <title>操作系统硬件结构</title>
      <link>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%A1%AC%E4%BB%B6%E7%BB%93%E6%9E%84/</link>
      <pubDate>Sat, 07 May 2022 19:06:02 +0800</pubDate>
      
      <guid>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%A1%AC%E4%BB%B6%E7%BB%93%E6%9E%84/</guid>
      
        <description>硬件结构 冯诺依曼模型 计算机基本结构为 5 个部分，分别是运算器、控制器、存储器、输入设备、输出设备，这 5 个部分也被称为冯诺依曼模型。
运算器、控制器是在CPU里的，存储器就我们常见的内存，输入输出设备则是计算机外接的设备，比如键盘就是输入设备，显示器就是输出设备。
32 位和 64 位 CPU区别，优点？  32 位 CPU 一次可以计算 4 个字节； 64 位 CPU 一次可以计算 8 个字节；  之所以 CPU 要这样设计，是为了能计算更大的数值，所以 CPU 位宽越大，可以计算的数值就越大</description>
      
    </item>
    
    <item>
      <title>操作系统基础</title>
      <link>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sat, 07 May 2022 19:04:46 +0800</pubDate>
      
      <guid>https://example.com/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/</guid>
      
        <description>基础 什么是操作系统？ 操作系统是管理计算机硬件与软件资源的程序。常见的操作系统有win, macos, linux, unix。
linux一般指的都是内核，基于Linux内核的发行版有很多。比如ubuntu，centos等等。
什么是系统调用？ 我们运行的程序基本都是运行在用户态，如果我们调用操作系统提供的系统态级别的子功能咋办呢？那就需要系统调用了！
系统调用类别：</description>
      
    </item>
    
  </channel>
</rss>